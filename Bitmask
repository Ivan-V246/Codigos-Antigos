#include <bits/stdc++.h>
using namespace std;
#define op ios::sync_with_stdio(false); cin.tie(NULL);
#define INF 0x3f3f3f3f
#define pii pair<int,int>
#define ll long long
#define mkp make_pair
#define endl '\n'
#define f first
#define s second
#define int long long
#define dbg(x) cout << #x << " " << x << endl;
const int MAXN = 1e9+7;
const int par = (2 << 21)+10;
int n;
string str;
vector <int> inc;

int ans = -1;

void solve(int mask, int atual) {
    if(atual == -1){
        ans = mask;
    }
    if(atual == -1) return;
    if (str[atual] == '0') {
        solve(mask, atual-1);
    } else if (str[atual] == '1') {
        solve((mask | (1LL << atual)), atual-1);
    } else {
        inc.emplace_back(atual);
        solve(mask, atual-1);
    }
}


signed main() { op
    cin >> str >> n;
    int resp = 0;
    reverse(str.begin(), str.end());
    solve(0, str.size()-1);
    for (auto x : inc) {
        if((ans | (1LL << x)) <= n) {
            ans |= (1LL << x);
        }
    }
    if( ans <= n) {
        cout << ans << endl;
    } else {
        cout << -1 << endl;
    }
}
/*Manipulação binária normal. Sempre lembrar do LL após os números para transformá-los em Long Long.*/
