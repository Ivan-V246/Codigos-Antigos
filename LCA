#include <bits/stdc++.h>
using namespace std;
#define op ios::sync_with_stdio(false); cin.tie(NULL);
#define INF 1e18
#define pii pair<int, int>
#define ll long long
#define mkp make_pair
#define endl '\n'
#define f first
#define s second
#define int long long
// #define vi vector <int>
#define dbg(x) cout << #x << " " << x << endl;
const int MAXN = 1e5+10;
int n, m, t;
vector <vector <int> > grafo(MAXN);
int nivel[MAXN];
int pai[MAXN];
int ancestral[MAXN][10];


void dfs(int atual) {
    for(auto x : grafo[atual]) {
        if(nivel[x] == -1) {
            pai[x] = atual;
            nivel[x] = nivel[atual]+1;
            dfs(x);
        }
    }
}

int lca(int x, int y) {
    while(x != y) {
        if(nivel[x] < nivel[y]) {
            y = pai[y];
        } else  {
            x = pai[x];
        }
    }
    return x;
}

signed main() { 
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b; cin >> a >> b;
        grafo[a].emplace_back(b);
        grafo[b].emplace_back(a);
    }
    memset(nivel, -1, sizeof nivel);
    nivel[1] = 0;
    dfs(1);
    int a, b; cin >> a >> b;
    memset(ancestral, -1, sizeof ancestral);
    for(int i = 1; i <= n; i++) {
        ancestral[i][0] = pai[i];
    }
    for(int j = 1; j < 10; j++) {
        for(int i = 1; i <= n; i++) {
            if(~ancestral[i][j-1]) {
                ancestral[i][j] = ancestral[ancestral[i][j-1]][j-1];
            }
        }
    }
    for(int i = 0; i < 10; i++) {
        cout << ancestral[11][i] << endl;
    }
}
/*LCA BÃ¡sico, preciso entender melhor.*/
